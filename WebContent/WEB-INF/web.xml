<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://xmlns.jcp.org/xml/ns/javaee" xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd" id="WebApp_ID" version="3.1">
  <display-name>Explorient Web App</display-name>
  
  <welcome-file-list>
    <welcome-file>Homepage.jsp</welcome-file>
  </welcome-file-list>
  
  <servlet>
    <servlet-name>Login</servlet-name>
    <servlet-class>com.login.Login</servlet-class>
    <load-on-startup>0</load-on-startup>
  </servlet>
  
  <servlet>
    <servlet-name>LoginDao</servlet-name>
    <servlet-class>com.login.LoginDao</servlet-class>
    <load-on-startup>0</load-on-startup>
  </servlet>
  
  <servlet>
    <servlet-name>HomepageDao</servlet-name>
    <servlet-class>com.homepage.HomepageDao</servlet-class>
    <load-on-startup>0</load-on-startup>
  </servlet>
  
  <servlet>
    <servlet-name>NewpageDao</servlet-name>
    <servlet-class>com.newpage.NewpageDao</servlet-class>
    <load-on-startup>0</load-on-startup>
  </servlet>
  
  <servlet>
    <servlet-name>PassengerDao</servlet-name>
    <servlet-class>com.passenger.PassengerDao</servlet-class>
    <load-on-startup>0</load-on-startup>
  </servlet>
  
  <servlet>
    <servlet-name>ItineraryDao</servlet-name>
    <servlet-class>com.itinerary.ItineraryDao</servlet-class>
    <load-on-startup>0</load-on-startup>
  </servlet>
  
  <servlet>
    <servlet-name>HotelDao</servlet-name>
    <servlet-class>com.hotel.HotelDao</servlet-class>
    <load-on-startup>0</load-on-startup>
  </servlet>
  
  <servlet>
    <servlet-name>VendorDao</servlet-name>
    <servlet-class>com.vendor.VendorDao</servlet-class>
    <load-on-startup>0</load-on-startup>
  </servlet>
  
  <servlet>
    <servlet-name>AgentDao</servlet-name>
    <servlet-class>com.agent.AgentDao</servlet-class>
    <load-on-startup>0</load-on-startup>
  </servlet>
  
  <context-param>
    <param-name>max.inactive.interval</param-name>
    <param-value>1200</param-value>
  </context-param>
  <context-param>
    <param-name>max.login.cookie.age</param-name>
    <param-value>7776000</param-value>
  </context-param>
  <context-param>
    <param-name>database.get.email.and.password.query</param-name>
    <param-value>SELECT * FROM Users WHERE Email = ? AND BINARY Password = ?;</param-value>
  </context-param>
  <context-param>
    <param-name>database.get.email.query</param-name>
    <param-value>SELECT * FROM Users WHERE Email = ?;</param-value>
  </context-param>
  <context-param>
    <param-name>database.get.salt.by.email</param-name>
    <param-value>select Salt from Users where Email = ?;</param-value>
  </context-param>
  
  
  <context-param>
    <param-name>database.add.user.query</param-name>
    <param-value>insert into Users (Email, Salt, Password, Firstname, Lastname) values (?, ?, ?, ?, ?);</param-value>
  </context-param>
  <context-param>
    <param-name>database.save.nonce.query</param-name>
    <param-value>insert into Nonce (Email, NonceId) values (?, ?);</param-value>
  </context-param>
  <context-param>
    <param-name>database.delete.nonce.query</param-name>
    <param-value>delete from Nonce where NonceId=?;</param-value>
  </context-param>
  <context-param>
    <param-name>database.nonce.query</param-name>
    <param-value>select * from Nonce where NonceId=?;</param-value>
  </context-param>
  <context-param>
    <param-name>database.email.and.nonce.query</param-name>
    <param-value>select * from Nonce where Email=? AND NonceId=?;</param-value>
  </context-param>
  <context-param>
    <param-name>database.get.email.in.nonce.table.query</param-name>
    <param-value>select * from Nonce where Email=?;</param-value>
  </context-param>
  <context-param>
    <param-name>database.update.nonce.by.email.query</param-name>
    <param-value>UPDATE Nonce SET NonceId = ? WHERE Email = ?;</param-value>
  </context-param>
  <context-param>
    <param-name>database.get.user.by.email.query</param-name>
    <param-value>select * from Users where Email=?;</param-value>
  </context-param>
  <context-param>
    <param-name>database.get.agents.query</param-name>
    <param-value>select Agent, Firstname, Lastname from Agents;</param-value>
  </context-param>
  <context-param>
    <param-name>database.check.agent.query</param-name>
    <param-value>select * from Agents where Agent=? and Firstname=? and Lastname=?;</param-value>
  </context-param>
  <context-param>
    <param-name>database.add.booking.query</param-name>
    <param-value>insert into Booking(Agent, Customer_Id, Destination, Air, Departure_Date ,Return_Date, Tour_Package) values (?,?,?,?,?,?,?);</param-value>
  </context-param>
  <context-param>
    <param-name>database.get.air.query</param-name>
    <param-value>SELECT DISTINCT Air FROM Booking;</param-value>
  </context-param>
  <context-param>
    <param-name>database.get.tour.package.query</param-name>
    <param-value>SELECT DISTINCT Tour_Package FROM Booking where Destination like Concat('%', ?,'%');</param-value>
  </context-param>
  <context-param>
    <param-name>database.check.customer.id.query</param-name>
    <param-value>select * from Booking where Customer_Id = ?;</param-value>
  </context-param>

  <context-param>
    <param-name>database.get.customer.id.like.customer.id.query</param-name>
    <param-value>select Customer_Id from Booking where Customer_Id like Concat(?, '%');</param-value>
  </context-param>
  
  <context-param>
    <param-name>database.get.customer.id.with.date.range.query</param-name>
    <param-value>SELECT Customer_Id FROM Booking WHERE Departure_Date BETWEEN CAST(? AS DATE) AND CAST(? AS DATE)</param-value>
  </context-param>
  <context-param>
    <param-name>database.get.booking.info.by.customer.id.query</param-name>
    <param-value>select Agent, Customer_Id, Destination, Air, Departure_Date ,Return_Date, Tour_Package from Booking where Customer_Id = ?;</param-value>
  </context-param>
  <context-param>
    <param-name>database.update.booking.by.customer.id.query</param-name>
    <param-value>UPDATE Booking SET Agent = ?, Destination = ?, Tour_Package =?, Air=?, Departure_Date=?, Return_Date=? WHERE Customer_Id = ?;</param-value>
  </context-param>
  <context-param>
    <param-name>database.get.agent.query</param-name>
    <param-value>select * from Agents where Agent=?;</param-value>
  </context-param>
  
  <context-param>
    <param-name>database.add.passenger.query</param-name>
    <param-value>insert into Passengers(Customer_Id, Title, Firstname, Middlename, Lastname)values(?,?,?,?,?);</param-value>
  </context-param>
  <context-param>
    <param-name>database.get.passenger.query</param-name>
    <param-value>select * from Passengers where Customer_Id = ?;</param-value>
  </context-param>
  <context-param>
    <param-name>database.check.duplicate.passenger.query</param-name>
    <param-value>select * from Passengers where Customer_Id=? and Title=? and Firstname=? and Middlename=? and Lastname=?;</param-value>
  </context-param>
  <context-param>
    <param-name>database.delete.passenger.query</param-name>
    <param-value>DELETE FROM Passengers WHERE Customer_Id=? and Title=? and Firstname=? and Middlename=? and Lastname=?;</param-value>
  </context-param>
  
  
  <context-param>
    <param-name>database.get.hotels.by.country.query</param-name>
    <param-value>select Hotel from Hotels where Country=? order by Hotel;</param-value>
  </context-param>
  <context-param>
    <param-name>database.get.hotels.by.city.query</param-name>
    <param-value>select Hotel from Hotels where City=? order by Hotel;</param-value>
  </context-param>
  
  <context-param>
    <param-name>database.get.hotel.by.hotel.name.query</param-name>
    <param-value>select * from Hotels where Hotel=?;</param-value>
  </context-param>
  
  <context-param>
    <param-name>database.add.hotel.query</param-name>
    <param-value>insert into Hotels(Hotel, Vendor, Address, City, State, Country, Zipcode, Telephone_1, Telephone_2, Fax, Email_1, Email_2, Website) values (?,?,?,?,?,?,?,?,?,?,?,?,?);</param-value>
  </context-param>
  
   <context-param>
    <param-name>database.get.vendors.query</param-name>
    <param-value>select DISTINCT Vendor from Vendors;</param-value>
  </context-param>
  
  <context-param>
    <param-name>database.check.vendor.query</param-name>
    <param-value>select * from Vendors where vendor = ?;</param-value>
  </context-param>
  
  <context-param>
    <param-name>database.update.hotel.query</param-name>
    <param-value>UPDATE Hotels SET Vendor = ?, Address = ?, City = ?, State = ?, Country = ?, Zipcode = ?, Telephone_1 = ?, Telephone_2 = ?, Fax = ?, Email_1 = ?, Email_2 = ?, Website = ? where Hotel = ?;</param-value>
  </context-param>
  
  <context-param>
    <param-name>database.delete.hotel.query</param-name>
    <param-value>DELETE FROM Hotels WHERE Hotel = ?;</param-value>
  </context-param>
  
  <context-param>
    <param-name>database.get.hotel.countries.query</param-name>
    <param-value>select DISTINCT Country from Hotels;</param-value>
  </context-param>
  
  <context-param>
    <param-name>database.get.hotel.cities.query</param-name>
    <param-value>select DISTINCT City from Hotels;</param-value>
  </context-param>
  
  
  
  <context-param>
    <param-name>database.get.vendor.countries.query</param-name>
    <param-value>select DISTINCT Country from Vendors;</param-value>
  </context-param>
  
  <context-param>
    <param-name>database.get.vendor.cities.query</param-name>
    <param-value>select DISTINCT City from Vendors;</param-value>
  </context-param>
  
  
  <context-param>
    <param-name>database.update.vendor.query</param-name>
    <param-value>UPDATE Vendors SET Address = ?, City = ?, State = ?, Country = ?, Zipcode = ?, Telephone_1 = ?, Telephone_2 = ?, Fax = ?, Email_1 = ?, Email_2 = ?, Website = ? where Vendor = ?;</param-value>
  </context-param>
  
  <context-param>
    <param-name>database.delete.vendor.query</param-name>
    <param-value>DELETE FROM Vendors WHERE Vendor = ?;</param-value>
  </context-param>
  
  <context-param>
    <param-name>database.add.vendor.query</param-name>
    <param-value>insert into Vendors(Vendor, Address, City, State, Country, Zipcode, Telephone_1, Telephone_2, Fax, Email_1, Email_2, Website) values (?,?,?,?,?,?,?,?,?,?,?,?);</param-value>
  </context-param>
  
  <context-param>
    <param-name>database.get.vendors.by.country.query</param-name>
    <param-value>select Vendor from Vendors where Country=?;</param-value>
  </context-param>
  <context-param>
    <param-name>database.get.vendors.by.city.query</param-name>
    <param-value>select Vendor from Vendors where City=?;</param-value>
  </context-param>
  
  <context-param>
    <param-name>database.get.vendor.by.vendor.name.query</param-name>
    <param-value>select * from Vendors where Vendor=?;</param-value>
  </context-param>
  
  
  <context-param>
    <param-name>database.get.agent.countries.query</param-name>
    <param-value>select DISTINCT Country from Agents;</param-value>
  </context-param>
  
  <context-param>
    <param-name>database.get.agent.cities.query</param-name>
    <param-value>select DISTINCT City from Agents;</param-value>
  </context-param>
  
  <context-param>
    <param-name>database.delete.agent.query</param-name>
    <param-value>DELETE FROM Agents WHERE Agent = ?;</param-value>
  </context-param>
  
  <context-param>
    <param-name>database.add.agent.query</param-name>
    <param-value>insert into Agents(Agent, Lastname, Firstname, Address, City, State, Country, Zipcode, Telephone_1, Telephone_2, Fax, Email_1, Email_2, Website) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?);</param-value>
  </context-param>
  
  <context-param>
    <param-name>database.update.agent.query</param-name>
    <param-value>UPDATE Agents SET Lastname = ?, Firstname = ?, Address = ?, City = ?, State = ?, Country = ?, Zipcode = ?, Telephone_1 = ?, Telephone_2 = ?, Fax = ?, Email_1 = ?, Email_2 = ?, Website = ? where Agent = ?;</param-value>
  </context-param>
  
  
  <context-param>
    <param-name>database.get.agents.by.country.query</param-name>
    <param-value>select Agent from Agents where Country=?;</param-value>
  </context-param>
  <context-param>
    <param-name>database.get.agents.by.city.query</param-name>
    <param-value>select Agent from Agents where City=?;</param-value>
  </context-param>
  
  <context-param>
    <param-name>database.get.agent.by.agent.name.query</param-name>
    <param-value>select * from Agents where Agent=?;</param-value>
  </context-param>
  
  
  <context-param>
    <param-name>database.get.tours.by.customer.id.query</param-name>
    <param-value>Select * from Tours where Customer_Id = ?;</param-value>
  </context-param>
  
  <context-param>
    <param-name>database.get.booking.dates.by.customer.id.query</param-name>
    <param-value>SELECT Departure_Date, Return_Date from Booking where Customer_Id = ?;</param-value>
  </context-param>
  
  <context-param>
    <param-name>database.get.countries.from.Tours.Tour_Templates.Hotels.and.Vendors.query</param-name>
    <param-value>select Distinct Country from Tours UNION select Distinct Country from Tour_Templates UNION select Distinct Country from Hotels UNION select Distinct Country from Vendors order by Country;</param-value>
  </context-param>
  
  <context-param>
    <param-name>database.get.cities.from.Tours.Tour_Templates.Hotels.and.Vendors.query</param-name>
    <param-value>select Distinct City from Tours UNION select Distinct City from Tour_Templates UNION select Distinct City from Hotels UNION select Distinct City from Vendors order by City;</param-value>
  </context-param>
  
  <context-param>
    <param-name>database.get.activity.templates.by.country.query</param-name>
    <param-value>select Distinct Tour from Tour_Templates where Country = ? order by Tour;</param-value>
  </context-param>
  
  <context-param>
    <param-name>database.get.activity.templates.by.city.query</param-name>
    <param-value>select Distinct Tour from Tour_Templates where City = ? order by Tour;</param-value>
  </context-param>
  
  <context-param>
    <param-name>database.get.tours.from.Tours.and.Tour_Templates.by.country.query</param-name>
    <param-value>select Distinct Tour from Tours where Country = ? UNION select Distinct Tour from Tour_Templates where Country = ? order by Tour;</param-value>
  </context-param>
  
  <context-param>
    <param-name>database.get.tours.from.Tours.and.Tour_Templates.by.city.query</param-name>
    <param-value>select Distinct Tour from Tours where city = ? UNION select Distinct Tour from Tour_Templates where city = ? order by Tour;</param-value>
  </context-param> 
  
  <context-param>
    <param-name>database.get.activity.city.and.country.by.tourName.query</param-name>
    <param-value>select Activity, City, Country from Tour_Templates where Tour = ?;</param-value>
  </context-param> 
  
  <context-param>
    <param-name>database.get.land.vouchers.by.customer.id.query</param-name>
    <param-value>select * from Land_Vouchers where Customer_Id = ?;</param-value>
  </context-param> 
  
  <context-param>
    <param-name>database.get.hotel.vouchers.by.customer.id.query</param-name>
    <param-value>select * from Hotel_Vouchers where Customer_Id = ?;</param-value>
  </context-param> 
  
  
  
  
  
  <context-param>
    <param-name>session.name</param-name>
    <param-value>Explorient.session</param-value>
  </context-param>
  <context-param>
    <param-name>database.username</param-name>
    <param-value>Richard</param-value>
  </context-param>
  <context-param>
    <param-name>database.password</param-name>
    <param-value>richard33.</param-value>
  </context-param>
  <context-param>
    <param-name>database.url</param-name>
    <param-value>jdbc:mysql://107.173.183.162:3306/ExplorientDB</param-value>
  </context-param>
  <context-param>
    <param-name>user.login.email</param-name>
    <param-value>email</param-value>
  </context-param>
  <context-param>
    <param-name>user.login.password</param-name>
    <param-value>password</param-value>
  </context-param>
  <context-param>
    <param-name>register.confirm.password</param-name>
    <param-value>confirm password</param-value>
  </context-param>
  <context-param>
    <param-name>login.failed</param-name>
    <param-value>The email or password is incorrect.</param-value>
  </context-param>
  <context-param>
    <param-name>login.max.lenth.failed</param-name>
    <param-value>Email or password length is invalid.</param-value>
  </context-param>
  <context-param>
    <param-name>max.length</param-name>
    <param-value>64</param-value>
  </context-param>
  <context-param>
    <param-name>login.cookie.name</param-name>
    <param-value>Explorient.email</param-value>
  </context-param>
  <context-param>
    <param-name>Register</param-name>
    <param-value>register</param-value>
  </context-param>
  <context-param>
    <param-name>register.failed</param-name>
    <param-value>register.failed</param-value>
  </context-param>
  <context-param>
    <param-name>register.firstname</param-name>
    <param-value>first name</param-value>
  </context-param>
  <context-param>
    <param-name>register.lastname</param-name>
    <param-value>last name</param-value>
  </context-param>
  <context-param>
    <param-name>register.cookie.name</param-name>
    <param-value>Explorient.register</param-value>
  </context-param>
  <context-param>
    <param-name>register.empty.field.message</param-name>
    <param-value>Sorry, can't leave any blank.</param-value>
  </context-param>
  <context-param>
    <param-name>register.email.exist.message</param-name>
    <param-value>Sorry, this email already exists.</param-value>
  </context-param>
  <context-param>
    <param-name>register.invalid.email.message</param-name>
    <param-value>Please enter a valid email.</param-value>
  </context-param>
  <context-param>
    <param-name>register.unmatched.password.message</param-name>
    <param-value>Password and Confirm password do not match.</param-value>
  </context-param>
  <context-param>
    <param-name>register.max.lenth.failed.message</param-name>
    <param-value>Email, password, first name, or last name length invalid.</param-value>
  </context-param>
  
  <context-param>
    <param-name>register.invalid.symbols.failed.message</param-name>
    <param-value>Invalid symbols: &quot;=&quot; &quot;&lt;&quot;, &quot;&gt;&quot;, and &quot;@&quot;</param-value>
  </context-param>
 
  
  
  <context-param>
    <param-name>homepage.navigation.search</param-name>
    <param-value>search</param-value>
  </context-param>
  <context-param>
    <param-name>homepage.navigation.booking</param-name>
    <param-value>booking</param-value>
  </context-param>
  <context-param>
    <param-name>homepage.navigation.logout</param-name>
    <param-value>log out</param-value>
  </context-param>
  <context-param>
    <param-name>homepage.navigation.selected</param-name>
    <param-value>navigation</param-value>
  </context-param>
  <context-param>
    <param-name>css.styling.color.gold</param-name>
    <param-value>color: #e2c04b;</param-value>
  </context-param>
  <context-param>
    <param-name>homepage.navigation.profile</param-name>
    <param-value>profile</param-value>
  </context-param>
  <context-param>
    <param-name>homepage.navigation.setting</param-name>
    <param-value>setting</param-value>
  </context-param>
  <context-param>
    <param-name>homepage.navigation.hotel</param-name>
    <param-value>hotel</param-value>
  </context-param>
  <context-param>
    <param-name>homepage.navigation.vendor</param-name>
    <param-value>vendor</param-value>
  </context-param>
  <context-param>
    <param-name>homepage.navigation.agent</param-name>
    <param-value>agent</param-value>
  </context-param>
  <context-param>
    <param-name>homepage.navigation.passenger</param-name>
    <param-value>passenger</param-value>
  </context-param>
  <context-param>
    <param-name>homepage.navigation.new</param-name>
    <param-value>Booking</param-value>
  </context-param>
  <context-param>
    <param-name>homepage.navigation.itinerary</param-name>
    <param-value>itinerary</param-value>
  </context-param>
  <context-param>
    <param-name>homepage.navigation.voucher</param-name>
    <param-value>voucher</param-value>
  </context-param>
  <context-param>
    <param-name>new.agent</param-name>
    <param-value>agent</param-value>
  </context-param>
  <context-param>
    <param-name>new.customer.id</param-name>
    <param-value>Customer ID</param-value>
  </context-param>
  <context-param>
    <param-name>new.search.box.customer.id</param-name>
    <param-value>search_box_customer_id</param-value>
  </context-param>
  <context-param>
    <param-name>new.destination</param-name>
    <param-value>destination</param-value>
  </context-param>
  <context-param>
    <param-name>new.air</param-name>
    <param-value>air</param-value>
  </context-param>
  <context-param>
    <param-name>new.date.of.departure</param-name>
    <param-value>date_of_departure</param-value>
  </context-param>
  <context-param>
    <param-name>new.date.of.return</param-name>
    <param-value>date_of_return</param-value>
  </context-param>
  <context-param>
    <param-name>new.country</param-name>
    <param-value>country</param-value>
  </context-param>
  <context-param>
    <param-name>new.get.packages.button</param-name>
    <param-value>Get Packages</param-value>
  </context-param>
  <context-param>
    <param-name>new.get.booking.button</param-name>
    <param-value>Get Booking</param-value>
  </context-param>
  <context-param>
    <param-name>new.create.button</param-name>
    <param-value>Create</param-value>
  </context-param>
  <context-param>
    <param-name>new.update.button</param-name>
    <param-value>Update</param-value>
  </context-param>
  <context-param>
    <param-name>new.clear.button</param-name>
    <param-value>Clear</param-value>
  </context-param>
  
  
  <context-param>
    <param-name>new.tour.package</param-name>
    <param-value>tour_package</param-value>
  </context-param>
  <context-param>
    <param-name>new.agent.not.found.failed</param-name>
    <param-value>Agent not found.</param-value>
  </context-param>
  <context-param>
    <param-name>new.equal.sign.failed</param-name>
    <param-value>Cannot have &quot;=&quot; sign.</param-value>
  </context-param>
  <context-param>
    <param-name>new.empty.field.failed</param-name>
    <param-value>Sorry, can't leave any field blank.</param-value>
  </context-param>
  <context-param>
    <param-name>new.customer.id.exists.failed</param-name>
    <param-value>Customer id already exists.</param-value>
  </context-param>
  <context-param>
    <param-name>new.customer.id.does.not.exist.failed</param-name>
    <param-value>Customer id does not exist.</param-value>
  </context-param>
  <context-param>
    <param-name>new.customer.id.invalid.failed</param-name>
    <param-value>Correct customer id format: &quot;Lastname-Departure Date&quot;.</param-value>
  </context-param>
  <context-param>
    <param-name>new.date.format.invalid.failed</param-name>
    <param-value>Invalid date format.</param-value>
  </context-param>
  <context-param>
    <param-name>new.agent.format.invalid.failed</param-name>
    <param-value>Invalid agent format.</param-value>
  </context-param>
  <context-param>
    <param-name>new.booking.updated.message</param-name>
    <param-value>Booking updated.</param-value>
  </context-param>
  
  <context-param>
    <param-name>new.countries</param-name>
    <param-value>China-Japan-Thailand-Hong Kong-Cambodia-Singapore-Indonesia-Malaysia-Vietnam-Myanmar-South Korea-Nepal-India</param-value>
  </context-param>
  
  
   
  
  <context-param>
    <param-name>BookingCreated.add.passenger</param-name>
    <param-value>Add passenger for booking</param-value>
  </context-param>
  <context-param>
    <param-name>BookingCreated.add.shipping.address</param-name>
    <param-value>Add shipping address for booking</param-value>
  </context-param>
  <context-param>
    <param-name>BookingCreated.update.booking</param-name>
    <param-value>Update booking</param-value>
  </context-param>
  
  
  
  <context-param>
    <param-name>passenger.search.box.lastname</param-name>
    <param-value>Last name</param-value>
  </context-param>
  <context-param>
    <param-name>passenger.departure.date.from</param-name>
    <param-value>Departure date from</param-value>
  </context-param>
  <context-param>
    <param-name>passenger.departure.date.to</param-name>
    <param-value>Departure date to</param-value>
  </context-param>
  <context-param>
    <param-name>passenger.get.customer.ids</param-name>
    <param-value>Get Customer Ids</param-value>
  </context-param>
  <context-param>
    <param-name>passenger.get.passengers</param-name>
    <param-value>Get Passengers</param-value>
  </context-param>
  <context-param>
    <param-name>passenger.add</param-name>
    <param-value>Add</param-value>
  </context-param>
  <context-param>
    <param-name>passenger.delete</param-name>
    <param-value>Delete</param-value>
  </context-param>
  
  
  <context-param>
    <param-name>passenger.title</param-name>
    <param-value>title</param-value>
  </context-param>
  <context-param>
    <param-name>passenger.middlename</param-name>
    <param-value>middlename</param-value>
  </context-param>
  <context-param>
    <param-name>passenger.empty.field.failed</param-name>
    <param-value>Customer id, First name, and Last name are required.</param-value>
  </context-param>
  <context-param>
    <param-name>passenger.customer.id.invalid.failed</param-name>
    <param-value>Customer Id doesn't exist.</param-value>
  </context-param>
  <context-param>
    <param-name>passenger.added</param-name>
    <param-value>Passenger added.</param-value>
  </context-param>
  <context-param>
    <param-name>passenger.already.exists.failed</param-name>
    <param-value>Passenger already exists.</param-value>
  </context-param>
  <context-param>
    <param-name>passenger.one.letter.failed</param-name>
    <param-value>Please enter more letters for better search result.</param-value>
  </context-param>
  
  <context-param>
    <param-name>passenger.does.not.exist.failed</param-name>
    <param-value>Passenger doesn't exist.</param-value>
  </context-param>
  <context-param>
    <param-name>passenger.deleted</param-name>
    <param-value>Passenger deleted.</param-value>
  </context-param>
  
  <context-param>
    <param-name>passenger.zero.result.found.failed</param-name>
    <param-value>0 result found.</param-value>
  </context-param>

  
  <context-param>
    <param-name>hotel.hotel</param-name>
    <param-value>*Hotel</param-value>
  </context-param>
  
  <context-param>
    <param-name>hotel.hotels.list</param-name>
    <param-value>hotel list</param-value>
  </context-param>
  
  <context-param>
    <param-name>hotel.vendor</param-name>
    <param-value>*Vendor</param-value>
  </context-param>
  
  <context-param>
    <param-name>hotel.address</param-name>
    <param-value>*Address</param-value>
  </context-param>
  
  <context-param>
    <param-name>hotel.city</param-name>
    <param-value>*City</param-value>
  </context-param>

  <context-param>
    <param-name>hotel.state</param-name>
    <param-value>State/Province</param-value>
  </context-param>
  
  <context-param>
    <param-name>hotel.country</param-name>
    <param-value>*Country</param-value>
  </context-param>
  
  <context-param>
    <param-name>hotel.zipcode</param-name>
    <param-value>Zipcode</param-value>
  </context-param>
  
  <context-param>
    <param-name>hotel.telephone1</param-name>
    <param-value>*Telephone 1</param-value>
  </context-param>
  
  <context-param>
    <param-name>hotel.telephone2</param-name>
    <param-value>Telephone 2</param-value>
  </context-param>
  
  <context-param>
    <param-name>hotel.fax</param-name>
    <param-value>Fax</param-value>
  </context-param>
  
  <context-param>
    <param-name>hotel.email1</param-name>
    <param-value>Email 1</param-value>
  </context-param>
  
  <context-param>
    <param-name>hotel.email2</param-name>
    <param-value>Email 2</param-value>
  </context-param>
  
  <context-param>
    <param-name>hotel.website</param-name>
    <param-value>Website</param-value>
  </context-param>
  
  <context-param>
    <param-name>hotel.search.country</param-name>
    <param-value>search_country</param-value>
  </context-param>
  
  <context-param>
    <param-name>hotel.search.city</param-name>
    <param-value>search_city</param-value>
  </context-param>
  
  <context-param>
    <param-name>hotel.get.hotels.button</param-name>
    <param-value>Get Hotels</param-value>
  </context-param>
  
  <context-param>
    <param-name>hotel.create.button</param-name>
    <param-value>Create</param-value>
  </context-param>
  
  <context-param>
    <param-name>hotel.update.button</param-name>
    <param-value>Update</param-value>
  </context-param>
  
  <context-param>
    <param-name>hotel.delete.button</param-name>
    <param-value>Delete</param-value>
  </context-param>
  
  <context-param>
    <param-name>hotel.clear.button</param-name>
    <param-value>Clear</param-value>
  </context-param>
  
  <context-param>
    <param-name>hotel.*.indicates.required.field.failed</param-name>
    <param-value>* indicates required field</param-value>
  </context-param>
  
  
  <context-param>
    <param-name>hotel.hotel.created.message</param-name>
    <param-value>Hotel created.</param-value>
  </context-param>
  
  <context-param>
    <param-name>hotel.hotel.updated.message</param-name>
    <param-value>Hotel updated.</param-value>
  </context-param>
  
  <context-param>
    <param-name>hotel.hotel.deleted.message</param-name>
    <param-value>Hotel deleted.</param-value>
  </context-param>
  
  <context-param>
    <param-name>hotel.vendor.not.found.failed</param-name>
    <param-value>Vendor does not exist.</param-value>
  </context-param>
  
  <context-param>
    <param-name>hotel.hotel.not.found.failed</param-name>
    <param-value>Hotel does not exist.</param-value>
  </context-param>
  
  <context-param>
    <param-name>hotel.hotel.already.exists.failed</param-name>
    <param-value>Hotel already exists.</param-value>
  </context-param>
  
  
  
  
  <context-param>
    <param-name>vendor.get.vendors.button</param-name>
    <param-value>Get Vendors</param-value>
  </context-param>
  
  <context-param>
    <param-name>vendor.vendor.created.message</param-name>
    <param-value>Vendor created.</param-value>
  </context-param>
  
  <context-param>
    <param-name>vendor.vendor.updated.message</param-name>
    <param-value>Vendor updated.</param-value>
  </context-param>
  
  <context-param>
    <param-name>vendor.vendor.deleted.message</param-name>
    <param-value>Vendor deleted.</param-value>
  </context-param>
  
  <context-param>
    <param-name>vendor.vendor.already.exists.failed</param-name>
    <param-value>Vendor already exists.</param-value>
  </context-param>
  
  
  
  
  <context-param>
    <param-name>agent.agent</param-name>
    <param-value>*Agent</param-value>
  </context-param>
  
  <context-param>
    <param-name>agent.lastname</param-name>
    <param-value>*Last name</param-value>
  </context-param>
  
  <context-param>
    <param-name>agent.firstname</param-name>
    <param-value>*First name</param-value>
  </context-param>
  
  <context-param>
    <param-name>agent.get.Agents.button</param-name>
    <param-value>Get Agents</param-value>
  </context-param>
  
  
  <context-param>
    <param-name>agent.agent.created.message</param-name>
    <param-value>Agent created.</param-value>
  </context-param>
  
  <context-param>
    <param-name>agent.agent.updated.message</param-name>
    <param-value>Agent updated.</param-value>
  </context-param>
  
  <context-param>
    <param-name>agent.agent.deleted.message</param-name>
    <param-value>Agent deleted.</param-value>
  </context-param>
  
  <context-param>
    <param-name>agent.agent.already.exists.failed</param-name>
    <param-value>Agent already exists.</param-value>
  </context-param>
  
  <context-param>
    <param-name>agent.agent.not.found.failed</param-name>
    <param-value>Agent does not exist.</param-value>
  </context-param>
  
  
  
  <context-param>
    <param-name>itinerary.get.itinerary.button</param-name>
    <param-value>Get Itinerary</param-value>
  </context-param>
  
  <context-param>
    <param-name>itinerary.search.button</param-name>
    <param-value>Search</param-value>
  </context-param>
  
  <context-param>
    <param-name>itinerary.get.activity.button</param-name>
    <param-value>Get Activity</param-value>
  </context-param>
  
  <context-param>
    <param-name>itinerary.hotel.country</param-name>
    <param-value>Country</param-value>
  </context-param>
  
  <context-param>
    <param-name>itinerary.hotel.city</param-name>
    <param-value>City</param-value>
  </context-param>
  
  
  <context-param>
    <param-name>itinerary.day</param-name>
    <param-value>Day</param-value>
  </context-param>
  
  <context-param>
    <param-name>itinerary.activity</param-name>
    <param-value>Activity</param-value>
  </context-param>
  
  
  
  <context-param>
    <param-name>itinerary.activity.templates</param-name>
    <param-value>Activity Templates</param-value>
  </context-param>

  
  
  <context-param>
    <param-name>itinerary.land.service</param-name>
    <param-value>Land Service</param-value>
  </context-param>
  
  <context-param>
    <param-name>itinerary.vendors</param-name>
    <param-value>Vendor</param-value>
  </context-param>
  
  <context-param>
    <param-name>itinerary.accommodations</param-name>
    <param-value>Accommodations</param-value>
  </context-param>
  
  <context-param>
    <param-name>itinerary.room.type</param-name>
    <param-value>Room Type</param-value>
  </context-param>
  
  <context-param>
    <param-name>itinerary.more.land.service.button</param-name>
    <param-value>More Land Service</param-value>
  </context-param>
  
  
  
  
  
  
  
  
  
  
  
  
  
</web-app>